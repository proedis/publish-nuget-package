name: 'Publish NuGet Package on Proedis Registry'
description: 'Restore, build and pack a .csproj and publish the NuGet Package on Proedis Private Registry'
author: 'Proedis'

inputs:
  project-folder:
    description: 'The folder that is containing the .csproj file'
  project-file:
    description: 'The project main file name, including the .csproj extension'
  registry-api-key:
    description: 'The ApiKey to use while pushing the package'
  nuget-version:
    description: 'The NuGet Version to use'
    default: 'latest'
  dotnet-version:
    description: 'The DotNet Version to use'
    default: '6.x'

runs:
  using: 'composite'
  steps:
    - name: Checkout Branch
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Setup .NET SDK ${{ inputs.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
        
    - name: Setup NuGet CLI ${{ inputs.nuget-version }}
      uses: NuGet/setup-nuget@v1.1.1
      with:
        nuget-version: ${{ inputs.nuget-version }}
        
    - name: Compute Version using NerdBank.GitVersioning
      uses: dotnet/nbgv@v0.4
      id: nbgv
      with:
        path: ${{ inputs.project-folder }}
        
    - name: Build Project ${{ inputs.project-file }}
      run: dotnet build '${{ inputs.project-folder }}/${{ inputs.project-file }}' -c Release -p:Version=${{ steps.nbgv.outputs.SemVer2 }}
      shell: bash
      
    - name: Pack Project ${{ inputs.project-file }}
      run: nuget pack '${{ inputs.project-folder }}/${{ inputs.project-file }}' -Prop Configuration=Release -Version ${{ steps.nbgv.outputs.SemVer2 }}
      shell: bash
      
    - name: Publish Package
      run: dotnet nuget push *.nupkg -k ${{ inputs.registry-api-key }} -s https://nuget.registry.proedis.net/v3/index.json
      shell: bash
